# Build and Deploy to Azure Kubernetes Service using HELM

trigger:
  branches:
    include:
      - master
  paths:
    include:
      - challenge-01/source/rabbitmq

pr: none

variables:
  projectName: rabbitmq
  chartName: rabbitmq-chart
  registryServerName: $(acrRegistryName).azurecr.io
  version: 1.0.$(build.buildId)
  vmImageName: ubuntu-latest

  # define 9 more variables in the build pipeline in UI:
  # 1. acrRegistryName
  # 2. acrRegistryUsername
  # 3. acrRegistryPassword
  # 4. imagePullSecret
  # 5. replicaCount
  # 6. azureSubscriptionEndpoint
  # 7. kubernetesClusterResourceGroup
  # 8. kubernetesCluster

stages:
  - stage: Build
    displayName: Build stage
    jobs:
      - job: Build
        displayName: Build
        pool:
          vmImage: $(vmImageName)
        steps:
          - bash: docker build -f challenge-01/source/rabbitmq/Dockerfile -t $(registryServerName)/$(projectName):$(version) challenge-01/source/reporting-service/
            displayName: "docker build"
          - bash: |
              docker login $(registryServerName) -u $(acrRegistryUsername) -p $(acrRegistryPassword)
              docker push $(registryServerName)/$(projectName):$(version)
            displayName: "docker push"
          - bash: |
              set -eou pipefail
              # set helm version
              helmVersion='helm-v3.0.0-linux-amd64.tar.gz'
              # download helm version
              wget https://get.helm.sh/$helmVersion
              tar xvzf $helmVersion
              # move helm3 binary to local folder
              sudo mv linux-amd64/helm /usr/bin/helm3
              helm3 version
            displayName: "helm3 installation"
          - bash: "helm3 package --version $(version) --app-version=$(version) --destination $(build.artifactStagingDirectory) $(system.defaultWorkingDirectory)/challenge-01/source/charts/$(chartName)"
            displayName: "helm3 package"
          - bash: "az acr helm push -n $(acrRegistryName) -u $(acrRegistryUsername) -p $(acrRegistryPassword) $(build.artifactStagingDirectory)/$(chartName)-$(version).tgz"
            displayName: "az acr helm push"
          - task: PublishBuildArtifacts@1
            displayName: "publish artifacts: drop"

  - stage: Deploy
    displayName: Deploy to Testing Environment
    dependsOn: Build
    jobs:
      - deployment: Deploy
        displayName: Deploy
        pool:
          vmImage: $(vmImageName)
        environment: Testing Environment
        strategy:
          runOnce:
            deploy:
              steps:
                - bash: |
                    set -eou pipefail
                    # set helm version
                    helmVersion='helm-v3.0.0-linux-amd64.tar.gz'
                    # download helm version
                    wget https://get.helm.sh/$helmVersion
                    tar xvzf $helmVersion
                    # move helm3 binary to local folder
                    sudo mv linux-amd64/helm /usr/bin/helm3
                    helm3 version
                  displayName: "helm3 installation"
                - bash: "helm3 repo add $(acrRegistryName) https://$(acrRegistryName).azurecr.io/helm/v1/repo --username $(acrRegistryUsername) --password $(acrRegistryPassword)"
                  displayName: "helm3 repo add"
                - task: AzureCLI@2
                  inputs:
                    azureSubscription: $(azureSubscriptionEndpoint)
                    scriptType: "bash"
                    scriptLocation: "inlineScript"
                    inlineScript: "az aks get-credentials --name $(kubernetesCluster) --resource-group $(kubernetesClusterResourceGroup)"
                  displayName: "get cluster credentials"
                - task: AzureCLI@2
                  inputs:
                    azureSubscription: $(azureSubscriptionEndpoint)
                    scriptType: "bash"
                    scriptLocation: "inlineScript"
                    inlineScript: "helm3 upgrade --install --version $(version) -n $(projectName) $(projectName) $(acrRegistryName)/$(chartName) --namespace=challenge-01 --set replicaCount=$(replicaCount) --set image.repository=$(acrRegistryName).azurecr.io/$(projectName) --set ingress.enabled=false --set nameOverride=$(projectName) --set fullnameOverride=$(projectName) --set imagePullSecrets[0].name=$(imagePullSecret)"
                  displayName: "helm3 upgrade or install"
